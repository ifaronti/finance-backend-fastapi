generator client {
    provider             = "prisma-client-py"
    recursive_type_depth = 5
    interface            = "asyncio"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model bills {
  billId          Int      @id @unique @default(autoincrement())
  name            String
  amount          Decimal  @db.Decimal(30, 2)
  category        String
  isPlaceholder   Boolean  @default(false)
  avatar          String
  due_day         Int
  categoryId      Int
  userId          String
  updatedAt       DateTime @default(now())
  createdAt       DateTime @default(now())
  category_relate category @relation(fields: [categoryId], references: [categoryId])
  user            user     @relation(fields: [userId], references: [id])
}

model budgets {
  budgetId        Int      @id @unique @default(autoincrement())
  categoryId      Int
  category        String
  maximum         Decimal  @db.Decimal(30, 2)
  theme           String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
  spent           Decimal  @default(0) @db.Decimal(30, 2)
  userId          String
  isPlaceholder   Boolean  @default(false)
  category_relate category @relation(fields: [categoryId], references: [categoryId])
  user            user     @relation(fields: [userId], references: [id])
}

model category {
  categoryId   Int            @id @unique @default(autoincrement())
  category     String
  bills        bills[]
  budgets      budgets[]
  transactions transactions[]
}

model pots {
  potId         Int      @id @unique @default(autoincrement())
  theme         String
  target        Decimal  @db.Decimal(30, 2)
  total         Decimal  @db.Decimal(30, 2)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  name          String
  isPlaceholder Boolean  @default(false)
  userId        String
  user          user     @relation(fields: [userId], references: [id])
}

model transactions {
  transactionId   Int      @id @default(autoincrement())
  userId          String
  recurring       Boolean
  categoryId      Int
  date            DateTime @default(now())
  category        String
  name            String
  amount          Decimal  @db.Decimal(30, 2)
  avatar          String
  isPlaceholder   Boolean  @default(false)
  category_relate category @relation(fields: [categoryId], references: [categoryId])
  user            user     @relation(fields: [userId], references: [id])
}

model user {
  id           String         @id @unique @default(uuid())
  email        String         @unique
  name         String         @db.VarChar
  avatar       String?        @db.VarChar
  balance      Decimal?       @db.Decimal(30, 2)
  expenses     Decimal?       @db.Decimal(30, 2)
  income       Decimal        @db.Decimal(30, 2)
  password     String?        @db.VarChar
  updatedAt    DateTime       @default(now())
  createdAt    DateTime       @default(now())
  usedTokens   String[]
  githubid     Int?
  bills        bills[]
  budgets      budgets[]
  pots         pots[]
  transactions transactions[]
}
